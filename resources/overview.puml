@startuml

skinparam defaultTextAlignment center
'skinparam backgroundcolor transparent
left to right direction

cloud #Azure {
    file "Fixed Width Log" as rawFixedWidthLog #LightBlue
    file "CSV Log" as rawCsvLog #LightBlue
    file "JSON Log" as rawJsonLog #LightBlue
    file "XML Log" as rawXmlLog #LightBlue
    file "XML (event-logging) Log" as rawEventsLog #LightBlue
    file "Reference Data" as refDataLog #LightBlue
}

'cloud #Azure {
'    file "Logs" as rawLogs #LightBlue
'}

cloud #Azure {
    file "Fixed Width Log" as rawFixedWidthLog2 #LightBlue
    file "CSV Log" as rawCsvLog2 #LightBlue
    file "JSON Log" as rawJsonLog2 #LightBlue
    file "XML Log" as rawXmlLog2 #LightBlue
    file "XML (event-logging) Log" as rawEventsLog2 #LightBlue
    file "Reference Data" as refDataLog2 #LightBlue
}

rectangle "Stroom cluster" as stroom #WhiteSmoke {
    rectangle "Local Stroom Proxy" as stroomProxyLocal #WhiteSmoke {
        rectangle "Aggregator" as proxyAggregator #LightSeaGreen
        database "Repository" as proxyRepo #LightSeaGreen
    }

    rectangle "User Interface" as ui #DarkOrange
    database "Data Store\n (Raw & cooked)" as dataStore #DarkOrange
    database "Lucene Index" as index #DarkOrange
    database "Meta Store" as metaStore #DarkOrange
    rectangle "Stream Processor" as streamProcessor #DarkOrange
    database "Reference Data" as refDataStore #DarkOrange
    database "Statistics Store" as statsStore #DarkOrange
}

rectangle "Kafka" as kafka #LightGreen
database "Solr" as solr #LightGreen

rectangle "Remote Stroom Proxy" as stroomProxyRemote #WhiteSmoke {
    rectangle "Aggregator" as proxyAggregatorRemote #LightSeaGreen
    rectangle "Forwarder" as proxyForwarderRemote #LightSeaGreen
    database "Repository" as proxyRepoRemote #LightSeaGreen
}

proxyAggregatorRemote -l-> proxyRepoRemote
proxyRepoRemote -l-> proxyForwarderRemote


rawFixedWidthLog --> proxyAggregatorRemote :POST
rawCsvLog --> proxyAggregatorRemote :POST
rawXmlLog --> proxyAggregatorRemote :POST
rawEventsLog --> proxyAggregatorRemote :POST
rawJsonLog --> proxyAggregatorRemote :POST
refDataLog --> proxyAggregatorRemote :POST
proxyForwarderRemote ---> proxyAggregator :POST

'rawLogs2 --> proxyAggregator :POST
rawFixedWidthLog2 --> proxyAggregator :POST
rawCsvLog2 --> proxyAggregator :POST
rawXmlLog2 --> proxyAggregator :POST
rawEventsLog2 --> proxyAggregator :POST
rawJsonLog2 --> proxyAggregator :POST
refDataLog2 --> proxyAggregator :POST

proxyAggregator -l-> proxyRepo
proxyRepo --> dataStore

streamProcessor -[#Blue]l-> kafka :produce
streamProcessor -[#Blue]-> solr
streamProcessor -[#Blue]-> dataStore :Store
streamProcessor -[#Blue]-> index :Index records
streamProcessor -[#Blue]-> refDataStore :Store
streamProcessor -[#Blue]-> metaStore :Store
streamProcessor -[#Blue]-> statsStore :Store
refDataStore -[#Blue]-> streamProcessor :Lookup
dataStore -[#Blue]-> streamProcessor :Retrieve

ui -[#Grey]l-> streamProcessor :<color:Grey>Manage

ui <-[#Grey]- index :<color:Grey>Query
ui <-[#Grey]- metaStore :<color:Grey>Query
ui <-[#Grey]- dataStore :<color:Grey>Query
ui <-[#Grey]l- solr :<color:Grey>Query
ui <-[#Grey]- statsStore :<color:Grey>Query

@enduml