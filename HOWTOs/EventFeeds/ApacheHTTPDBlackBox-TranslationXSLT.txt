<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet xpath-default-namespace="records:2" xmlns="event-logging:3" xmlns:stroom="stroom" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" version="3.0">

  <!-- Ingest the records tree -->
  <xsl:template match="records">
    <Events xsi:schemaLocation="event-logging:3 file://event-logging-v3.2.3.xsd" Version="3.2.3">
        <xsl:apply-templates />
    </Events>
  </xsl:template>

    <!-- Only generate events if we have an url on input -->
    <xsl:template match="record[data[@name = 'url']]">
        <Event>
            <xsl:apply-templates select="." mode="eventTime" />
            <xsl:apply-templates select="." mode="eventSource" />
            <xsl:apply-templates select="." mode="eventDetail" />
        </Event>
    </xsl:template>

    <xsl:template match="node()" mode="eventTime">
        <EventTime>
          <TimeCreated>
             <xsl:value-of select="stroom:format-date(data[@name = 'time']/@value, 'dd/MMM/yyyy:HH:mm:ss XX')" /> 
          </TimeCreated>
        </EventTime>
    </xsl:template>

    <xsl:template match="node()"  mode="eventSource">
        <EventSource>
            <System>
              <Name>
                <xsl:value-of select="stroom:feed-attribute('System')"  />
              </Name>
              <Environment>
                <xsl:value-of select="stroom:feed-attribute('Environment')"  />
              </Environment>
            </System>
            <Generator>Apache  HTTPD</Generator>
            <Device>
              <HostName>
                <xsl:value-of select="stroom:feed-attribute('MyHost')"  />
              </HostName>
              <IPAddress>
                <xsl:value-of select="stroom:feed-attribute('MyIPAddress')"  />
              </IPAddress>
            </Device>
            <Client>
              <IPAddress>
                <xsl:value-of select="data[@name =  'clientip']/@value"  />
              </IPAddress>
              <Port>
                <xsl:value-of select="data[@name =  'clientport']/@value"  />
              </Port>
            </Client>
            <Server>
              <HostName>
                <xsl:value-of select="data[@name =  'vserver']/@value"  />
              </HostName>
              <Port>
                <xsl:value-of select="data[@name =  'vserverport']/@value"  />
              </Port>
            </Server>
            <User>
              <Id>
                <xsl:value-of select="data[@name='user']/@value" />
              </Id>
            </User>
        </EventSource>
    </xsl:template>


    <!-- -->
    <xsl:template match="node()"  mode="eventDetail">
        <EventDetail>
            <View>
              <WebPage>
                  <Type>WebPage</Type>
                    <URL>
                      <xsl:value-of select="data[@name =  'url']/data[@name =  'url']/@value"  />
                    </URL>
                  <xsl:if test="data[@name =  'referer']/@value  != '-'">
                    <Referrer>
                      <xsl:value-of select="data[@name =  'referer']/@value"  />
                    </Referrer>
                  </xsl:if>
                    <HTTPMethod>
                      <xsl:value-of select="data[@name =  'url']/data[@name =  'httpMethod']/@value" />
                     </HTTPMethod>
                  <UserAgent>
                      <xsl:value-of select="data[@name =  'userAgent']/@value" />
                  </UserAgent>
                  <ResponseCode>
                      <xsl:value-of select="data[@name =  'response']/@value" />
                  </ResponseCode>

                  <!-- Protocol -->
                  <Data Name="Protocol">
                      <xsl:attribute name="Value" select="data[@name  =  'url']/data[@name =  'protocol']/@value"  />
                  </Data>

                  <!-- Protocol Version -->
                  <Data  Name="Version">
                      <xsl:attribute name="Value" select="data[@name  =  'url']/data[@name =  'version']/@value"  />
                  </Data>

                  <!--  Response Code   Before -->
                  <Data  Name="ResponseCodeBefore">
                      <xsl:attribute name="Value" select="data[@name  =  'responseB']/@value" />
                  </Data>

                  <!--  Connection Status -->
                  <Data Name="ConnectionStatus">
                      <xsl:attribute name="Value" select="data[@name  =  'constatus']/@value"  />
                  </Data>

                  <!-- Bytes transferred  -->
                  <xsl:if test="data[@name =  'bytesIn']/@value  != '0' and  data[@name =  'bytesIn']/@value  != '-'">
                  <Data  Name="BytesIn">
                      <xsl:attribute name="Value" select="data[@name  =  'bytesIn']/@value"  />
                  </Data>
                  </xsl:if>
                  <xsl:if test="data[@name =  'bytesOut']/@value  != '0' and  data[@name =  'bytesOut']/@value  != '-'">
                  <Data  Name="BytesOut">
                      <xsl:attribute name="Value" select="data[@name  =  'bytesOut']/@value" />
                  </Data>
                  </xsl:if>
                  <xsl:if test="data[@name =  'bytesOutContent']/@value  != '0'">
                  <Data Name="BytesOutContentOnly">
                      <xsl:attribute name="Value" select="data[@name  =  'bytesOutContent']/@value" />
                  </Data>
                  </xsl:if>

                  <!-- Time   to serve Request -->
                  <xsl:if test="data[@name =  'timeM']/@value != '0'">
                  <Data Name="TotalRequestTimeMicroseconds">
                      <xsl:attribute name="Value" select="data[@name  =  'timeM']/@value" />
                  </Data>
                  </xsl:if>
            </WebPage>
          </View>
        </EventDetail>
    </xsl:template>
</xsl:stylesheet>
